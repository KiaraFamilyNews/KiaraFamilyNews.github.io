(self.webpackChunkgatsby_starter_default=self.webpackChunkgatsby_starter_default||[]).push([[581],{1677:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === \'object\' && \'default\' in ex ? ex[\'default\'] : ex;\n}\n\nvar React = __webpack_require__(7294);\n\nvar React__default = _interopDefault(React);\n\nvar UAParser = __webpack_require__(4889);\n\nvar UA = new UAParser();\nvar browser = UA.getBrowser();\nvar cpu = UA.getCPU();\nvar device = UA.getDevice();\nvar engine = UA.getEngine();\nvar os = UA.getOS();\nvar ua = UA.getUA();\n\nvar setDefaults = function setDefaults(p) {\n  var d = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'none\';\n  return p ? p : d;\n};\n\nvar getNavigatorInstance = function getNavigatorInstance() {\n  if (typeof window !== \'undefined\') {\n    if (window.navigator || navigator) {\n      return window.navigator || navigator;\n    }\n  }\n\n  return false;\n};\n\nvar isIOS13Check = function isIOS13Check(type) {\n  var nav = getNavigatorInstance();\n  return nav && nav.platform && (nav.platform.indexOf(type) !== -1 || nav.platform === \'MacIntel\' && nav.maxTouchPoints > 1 && !window.MSStream);\n};\n\nfunction _typeof(obj) {\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== "function" && superClass !== null) {\n    throw new TypeError("Super expression must either be null or a function");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === "object" || typeof call === "function")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nvar DeviceTypes = {\n  Mobile: \'mobile\',\n  Tablet: \'tablet\',\n  SmartTv: \'smarttv\',\n  Console: \'console\',\n  Wearable: \'wearable\',\n  Browser: undefined\n};\nvar BrowserTypes = {\n  Chrome: \'Chrome\',\n  Firefox: "Firefox",\n  Opera: "Opera",\n  Yandex: "Yandex",\n  Safari: "Safari",\n  InternetExplorer: "Internet Explorer",\n  Edge: "Edge",\n  Chromium: "Chromium",\n  Ie: \'IE\',\n  MobileSafari: "Mobile Safari",\n  EdgeChromium: "Edge Chromium",\n  MIUI: "MIUI Browser",\n  SamsungBrowser: \'Samsung Browser\'\n};\nvar OsTypes = {\n  IOS: \'iOS\',\n  Android: "Android",\n  WindowsPhone: "Windows Phone",\n  Windows: \'Windows\',\n  MAC_OS: \'Mac OS\'\n};\nvar initialData = {\n  isMobile: false,\n  isTablet: false,\n  isBrowser: false,\n  isSmartTV: false,\n  isConsole: false,\n  isWearable: false\n};\n\nvar checkType = function checkType(type) {\n  switch (type) {\n    case DeviceTypes.Mobile:\n      return {\n        isMobile: true\n      };\n\n    case DeviceTypes.Tablet:\n      return {\n        isTablet: true\n      };\n\n    case DeviceTypes.SmartTv:\n      return {\n        isSmartTV: true\n      };\n\n    case DeviceTypes.Console:\n      return {\n        isConsole: true\n      };\n\n    case DeviceTypes.Wearable:\n      return {\n        isWearable: true\n      };\n\n    case DeviceTypes.Browser:\n      return {\n        isBrowser: true\n      };\n\n    default:\n      return initialData;\n  }\n};\n\nvar broPayload = function broPayload(isBrowser, browser, engine, os, ua) {\n  return {\n    isBrowser: isBrowser,\n    browserMajorVersion: setDefaults(browser.major),\n    browserFullVersion: setDefaults(browser.version),\n    browserName: setDefaults(browser.name),\n    engineName: setDefaults(engine.name),\n    engineVersion: setDefaults(engine.version),\n    osName: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    userAgent: setDefaults(ua)\n  };\n};\n\nvar mobilePayload = function mobilePayload(type, device, os, ua) {\n  return _objectSpread2({}, type, {\n    vendor: setDefaults(device.vendor),\n    model: setDefaults(device.model),\n    os: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    ua: setDefaults(ua)\n  });\n};\n\nvar stvPayload = function stvPayload(isSmartTV, engine, os, ua) {\n  return {\n    isSmartTV: isSmartTV,\n    engineName: setDefaults(engine.name),\n    engineVersion: setDefaults(engine.version),\n    osName: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    userAgent: setDefaults(ua)\n  };\n};\n\nvar consolePayload = function consolePayload(isConsole, engine, os, ua) {\n  return {\n    isConsole: isConsole,\n    engineName: setDefaults(engine.name),\n    engineVersion: setDefaults(engine.version),\n    osName: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    userAgent: setDefaults(ua)\n  };\n};\n\nvar wearPayload = function wearPayload(isWearable, engine, os, ua) {\n  return {\n    isWearable: isWearable,\n    engineName: setDefaults(engine.name),\n    engineVersion: setDefaults(engine.version),\n    osName: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    userAgent: setDefaults(ua)\n  };\n};\n\nvar type = checkType(device.type);\n\nfunction deviceDetect() {\n  var isBrowser = type.isBrowser,\n      isMobile = type.isMobile,\n      isTablet = type.isTablet,\n      isSmartTV = type.isSmartTV,\n      isConsole = type.isConsole,\n      isWearable = type.isWearable;\n\n  if (isBrowser) {\n    return broPayload(isBrowser, browser, engine, os, ua);\n  }\n\n  if (isSmartTV) {\n    return stvPayload(isSmartTV, engine, os, ua);\n  }\n\n  if (isConsole) {\n    return consolePayload(isConsole, engine, os, ua);\n  }\n\n  if (isMobile) {\n    return mobilePayload(type, device, os, ua);\n  }\n\n  if (isTablet) {\n    return mobilePayload(type, device, os, ua);\n  }\n\n  if (isWearable) {\n    return wearPayload(isWearable, engine, os, ua);\n  }\n}\n\nvar isMobileType = function isMobileType() {\n  return device.type === DeviceTypes.Mobile;\n};\n\nvar isTabletType = function isTabletType() {\n  return device.type === DeviceTypes.Tablet;\n};\n\nvar isMobileAndTabletType = function isMobileAndTabletType() {\n  switch (device.type) {\n    case DeviceTypes.Mobile:\n    case DeviceTypes.Tablet:\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nvar isEdgeChromiumType = function isEdgeChromiumType() {\n  return typeof ua === \'string\' && ua.indexOf(\'Edg/\') !== -1;\n};\n\nvar isSmartTVType = function isSmartTVType() {\n  return device.type === DeviceTypes.SmartTv;\n};\n\nvar isBrowserType = function isBrowserType() {\n  return device.type === DeviceTypes.Browser;\n};\n\nvar isWearableType = function isWearableType() {\n  return device.type === DeviceTypes.Wearable;\n};\n\nvar isConsoleType = function isConsoleType() {\n  return device.type === DeviceTypes.Console;\n};\n\nvar isAndroidType = function isAndroidType() {\n  return os.name === OsTypes.Android;\n};\n\nvar isWindowsType = function isWindowsType() {\n  return os.name === OsTypes.Windows;\n};\n\nvar isMacOsType = function isMacOsType() {\n  return os.name === OsTypes.MAC_OS;\n};\n\nvar isWinPhoneType = function isWinPhoneType() {\n  return os.name === OsTypes.WindowsPhone;\n};\n\nvar isIOSType = function isIOSType() {\n  return os.name === OsTypes.IOS;\n};\n\nvar isChromeType = function isChromeType() {\n  return browser.name === BrowserTypes.Chrome;\n};\n\nvar isFirefoxType = function isFirefoxType() {\n  return browser.name === BrowserTypes.Firefox;\n};\n\nvar isChromiumType = function isChromiumType() {\n  return browser.name === BrowserTypes.Chromium;\n};\n\nvar isEdgeType = function isEdgeType() {\n  return browser.name === BrowserTypes.Edge;\n};\n\nvar isYandexType = function isYandexType() {\n  return browser.name === BrowserTypes.Yandex;\n};\n\nvar isSafariType = function isSafariType() {\n  return browser.name === BrowserTypes.Safari || browser.name === BrowserTypes.MobileSafari;\n};\n\nvar isMobileSafariType = function isMobileSafariType() {\n  return browser.name === BrowserTypes.MobileSafari;\n};\n\nvar isOperaType = function isOperaType() {\n  return browser.name === BrowserTypes.Opera;\n};\n\nvar isIEType = function isIEType() {\n  return browser.name === BrowserTypes.InternetExplorer || browser.name === BrowserTypes.Ie;\n};\n\nvar isMIUIType = function isMIUIType() {\n  return browser.name === BrowserTypes.MIUI;\n};\n\nvar isSamsungBrowserType = function isSamsungBrowserType() {\n  return browser.name === BrowserTypes.SamsungBrowser;\n};\n\nvar isElectronType = function isElectronType() {\n  var nav = getNavigatorInstance();\n  var ua = nav && nav.userAgent && nav.userAgent.toLowerCase();\n  return typeof ua === \'string\' ? /electron/.test(ua) : false;\n};\n\nvar getIOS13 = function getIOS13() {\n  var nav = getNavigatorInstance();\n  return nav && (/iPad|iPhone|iPod/.test(nav.platform) || nav.platform === \'MacIntel\' && nav.maxTouchPoints > 1) && !window.MSStream;\n};\n\nvar getIPad13 = function getIPad13() {\n  return isIOS13Check(\'iPad\');\n};\n\nvar getIphone13 = function getIphone13() {\n  return isIOS13Check(\'iPhone\');\n};\n\nvar getIPod13 = function getIPod13() {\n  return isIOS13Check(\'iPod\');\n};\n\nvar getBrowserFullVersion = function getBrowserFullVersion() {\n  return setDefaults(browser.version);\n};\n\nvar getBrowserVersion = function getBrowserVersion() {\n  return setDefaults(browser.major);\n};\n\nvar getOsVersion = function getOsVersion() {\n  return setDefaults(os.version);\n};\n\nvar getOsName = function getOsName() {\n  return setDefaults(os.name);\n};\n\nvar getBrowserName = function getBrowserName() {\n  return setDefaults(browser.name);\n};\n\nvar getMobileVendor = function getMobileVendor() {\n  return setDefaults(device.vendor);\n};\n\nvar getMobileModel = function getMobileModel() {\n  return setDefaults(device.model);\n};\n\nvar getEngineName = function getEngineName() {\n  return setDefaults(engine.name);\n};\n\nvar getEngineVersion = function getEngineVersion() {\n  return setDefaults(engine.version);\n};\n\nvar getUseragent = function getUseragent() {\n  return setDefaults(ua);\n};\n\nvar getDeviceType = function getDeviceType() {\n  return setDefaults(device.type, \'browser\');\n};\n\nvar isSmartTV = isSmartTVType();\nvar isConsole = isConsoleType();\nvar isWearable = isWearableType();\nvar isMobileSafari = isMobileSafariType() || getIPad13();\nvar isChromium = isChromiumType();\nvar isMobile = isMobileAndTabletType() || getIPad13();\nvar isMobileOnly = isMobileType();\nvar isTablet = isTabletType() || getIPad13();\nvar isBrowser = isBrowserType();\nvar isDesktop = isBrowserType();\nvar isAndroid = isAndroidType();\nvar isWinPhone = isWinPhoneType();\nvar isIOS = isIOSType() || getIPad13();\nvar isChrome = isChromeType();\nvar isFirefox = isFirefoxType();\nvar isSafari = isSafariType();\nvar isOpera = isOperaType();\nvar isIE = isIEType();\nvar osVersion = getOsVersion();\nvar osName = getOsName();\nvar fullBrowserVersion = getBrowserFullVersion();\nvar browserVersion = getBrowserVersion();\nvar browserName = getBrowserName();\nvar mobileVendor = getMobileVendor();\nvar mobileModel = getMobileModel();\nvar engineName = getEngineName();\nvar engineVersion = getEngineVersion();\nvar getUA = getUseragent();\nvar isEdge = isEdgeType() || isEdgeChromiumType();\nvar isYandex = isYandexType();\nvar deviceType = getDeviceType();\nvar isIOS13 = getIOS13();\nvar isIPad13 = getIPad13();\nvar isIPhone13 = getIphone13();\nvar isIPod13 = getIPod13();\nvar isElectron = isElectronType();\nvar isEdgeChromium = isEdgeChromiumType();\nvar isLegacyEdge = isEdgeType() && !isEdgeChromiumType();\nvar isWindows = isWindowsType();\nvar isMacOs = isMacOsType();\nvar isMIUI = isMIUIType();\nvar isSamsungBrowser = isSamsungBrowserType();\n\nvar AndroidView = function AndroidView(_ref) {\n  var renderWithFragment = _ref.renderWithFragment,\n      children = _ref.children,\n      viewClassName = _ref.viewClassName,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isAndroid ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar BrowserView = function BrowserView(_ref2) {\n  var renderWithFragment = _ref2.renderWithFragment,\n      children = _ref2.children,\n      viewClassName = _ref2.viewClassName,\n      style = _ref2.style,\n      props = _objectWithoutProperties(_ref2, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isBrowser ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar IEView = function IEView(_ref3) {\n  var renderWithFragment = _ref3.renderWithFragment,\n      children = _ref3.children,\n      viewClassName = _ref3.viewClassName,\n      style = _ref3.style,\n      props = _objectWithoutProperties(_ref3, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isIE ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar IOSView = function IOSView(_ref4) {\n  var renderWithFragment = _ref4.renderWithFragment,\n      children = _ref4.children,\n      viewClassName = _ref4.viewClassName,\n      style = _ref4.style,\n      props = _objectWithoutProperties(_ref4, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isIOS ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar MobileView = function MobileView(_ref5) {\n  var renderWithFragment = _ref5.renderWithFragment,\n      children = _ref5.children,\n      viewClassName = _ref5.viewClassName,\n      style = _ref5.style,\n      props = _objectWithoutProperties(_ref5, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isMobile ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar TabletView = function TabletView(_ref6) {\n  var renderWithFragment = _ref6.renderWithFragment,\n      children = _ref6.children,\n      viewClassName = _ref6.viewClassName,\n      style = _ref6.style,\n      props = _objectWithoutProperties(_ref6, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isTablet ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar WinPhoneView = function WinPhoneView(_ref7) {\n  var renderWithFragment = _ref7.renderWithFragment,\n      children = _ref7.children,\n      viewClassName = _ref7.viewClassName,\n      style = _ref7.style,\n      props = _objectWithoutProperties(_ref7, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isWinPhone ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar MobileOnlyView = function MobileOnlyView(_ref8) {\n  var renderWithFragment = _ref8.renderWithFragment,\n      children = _ref8.children,\n      viewClassName = _ref8.viewClassName,\n      style = _ref8.style,\n      props = _objectWithoutProperties(_ref8, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isMobileOnly ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar SmartTVView = function SmartTVView(_ref9) {\n  var renderWithFragment = _ref9.renderWithFragment,\n      children = _ref9.children,\n      viewClassName = _ref9.viewClassName,\n      style = _ref9.style,\n      props = _objectWithoutProperties(_ref9, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isSmartTV ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar ConsoleView = function ConsoleView(_ref10) {\n  var renderWithFragment = _ref10.renderWithFragment,\n      children = _ref10.children,\n      viewClassName = _ref10.viewClassName,\n      style = _ref10.style,\n      props = _objectWithoutProperties(_ref10, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isConsole ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar WearableView = function WearableView(_ref11) {\n  var renderWithFragment = _ref11.renderWithFragment,\n      children = _ref11.children,\n      viewClassName = _ref11.viewClassName,\n      style = _ref11.style,\n      props = _objectWithoutProperties(_ref11, ["renderWithFragment", "children", "viewClassName", "style"]);\n\n  return isWearable ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nvar CustomView = function CustomView(_ref12) {\n  var renderWithFragment = _ref12.renderWithFragment,\n      children = _ref12.children,\n      viewClassName = _ref12.viewClassName,\n      style = _ref12.style,\n      condition = _ref12.condition,\n      props = _objectWithoutProperties(_ref12, ["renderWithFragment", "children", "viewClassName", "style", "condition"]);\n\n  return condition ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement("div", _extends({\n    className: viewClassName,\n    style: style\n  }, props), children) : null;\n};\n\nfunction withOrientationChange(WrappedComponent) {\n  return /*#__PURE__*/function (_React$Component) {\n    _inherits(_class, _React$Component);\n\n    function _class(props) {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));\n      _this.isEventListenerAdded = false;\n      _this.handleOrientationChange = _this.handleOrientationChange.bind(_assertThisInitialized(_this));\n      _this.onOrientationChange = _this.onOrientationChange.bind(_assertThisInitialized(_this));\n      _this.onPageLoad = _this.onPageLoad.bind(_assertThisInitialized(_this));\n      _this.state = {\n        isLandscape: false,\n        isPortrait: false\n      };\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: "handleOrientationChange",\n      value: function handleOrientationChange() {\n        if (!this.isEventListenerAdded) {\n          this.isEventListenerAdded = true;\n        }\n\n        var orientation = window.innerWidth > window.innerHeight ? 90 : 0;\n        this.setState({\n          isPortrait: orientation === 0,\n          isLandscape: orientation === 90\n        });\n      }\n    }, {\n      key: "onOrientationChange",\n      value: function onOrientationChange() {\n        this.handleOrientationChange();\n      }\n    }, {\n      key: "onPageLoad",\n      value: function onPageLoad() {\n        this.handleOrientationChange();\n      }\n    }, {\n      key: "componentDidMount",\n      value: function componentDidMount() {\n        if ((typeof window === "undefined" ? "undefined" : _typeof(window)) !== undefined && isMobile) {\n          if (!this.isEventListenerAdded) {\n            this.handleOrientationChange();\n            window.addEventListener("load", this.onPageLoad, false);\n          } else {\n            window.removeEventListener("load", this.onPageLoad, false);\n          }\n\n          window.addEventListener("resize", this.onOrientationChange, false);\n        }\n      }\n    }, {\n      key: "componentWillUnmount",\n      value: function componentWillUnmount() {\n        window.removeEventListener("resize", this.onOrientationChange, false);\n      }\n    }, {\n      key: "render",\n      value: function render() {\n        return React__default.createElement(WrappedComponent, _extends({}, this.props, {\n          isLandscape: this.state.isLandscape,\n          isPortrait: this.state.isPortrait\n        }));\n      }\n    }]);\n\n    return _class;\n  }(React__default.Component);\n}\n\n__webpack_unused_export__ = AndroidView;\n__webpack_unused_export__ = BrowserTypes;\n__webpack_unused_export__ = BrowserView;\n__webpack_unused_export__ = ConsoleView;\n__webpack_unused_export__ = CustomView;\n__webpack_unused_export__ = IEView;\n__webpack_unused_export__ = IOSView;\n__webpack_unused_export__ = MobileOnlyView;\n__webpack_unused_export__ = MobileView;\n__webpack_unused_export__ = OsTypes;\n__webpack_unused_export__ = SmartTVView;\n__webpack_unused_export__ = TabletView;\n__webpack_unused_export__ = WearableView;\n__webpack_unused_export__ = WinPhoneView;\n__webpack_unused_export__ = browserName;\n__webpack_unused_export__ = browserVersion;\n__webpack_unused_export__ = deviceDetect;\n__webpack_unused_export__ = deviceType;\n__webpack_unused_export__ = engineName;\n__webpack_unused_export__ = engineVersion;\n__webpack_unused_export__ = fullBrowserVersion;\n__webpack_unused_export__ = getUA;\n__webpack_unused_export__ = isAndroid;\nexports.jU = isBrowser;\n__webpack_unused_export__ = isChrome;\n__webpack_unused_export__ = isChromium;\n__webpack_unused_export__ = isConsole;\n__webpack_unused_export__ = isDesktop;\n__webpack_unused_export__ = isEdge;\n__webpack_unused_export__ = isEdgeChromium;\n__webpack_unused_export__ = isElectron;\n__webpack_unused_export__ = isFirefox;\n__webpack_unused_export__ = isIE;\n__webpack_unused_export__ = isIOS;\n__webpack_unused_export__ = isIOS13;\n__webpack_unused_export__ = isIPad13;\n__webpack_unused_export__ = isIPhone13;\n__webpack_unused_export__ = isIPod13;\n__webpack_unused_export__ = isLegacyEdge;\n__webpack_unused_export__ = isMIUI;\n__webpack_unused_export__ = isMacOs;\n__webpack_unused_export__ = isMobile;\n__webpack_unused_export__ = isMobileOnly;\n__webpack_unused_export__ = isMobileSafari;\n__webpack_unused_export__ = isOpera;\n__webpack_unused_export__ = isSafari;\n__webpack_unused_export__ = isSamsungBrowser;\n__webpack_unused_export__ = isSmartTV;\n__webpack_unused_export__ = isTablet;\n__webpack_unused_export__ = isWearable;\n__webpack_unused_export__ = isWinPhone;\n__webpack_unused_export__ = isWindows;\n__webpack_unused_export__ = isYandex;\n__webpack_unused_export__ = mobileModel;\n__webpack_unused_export__ = mobileVendor;\n__webpack_unused_export__ = osName;\n__webpack_unused_export__ = osVersion;\n__webpack_unused_export__ = withOrientationChange;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1677\n')},4889:function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_RESULT__;/*!@license\n * UAParser.js v0.7.27\n * Lightweight JavaScript-based User-Agent string parser\n * https://github.com/faisalman/ua-parser-js\n *\n * Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n * Licensed under MIT License\n */\n(function (window, undefined) {\n  "use strict";\n\n  var LIBVERSION = "0.7.27",\n      EMPTY = "",\n      UNKNOWN = "?",\n      FUNC_TYPE = "function",\n      UNDEF_TYPE = "undefined",\n      OBJ_TYPE = "object",\n      STR_TYPE = "string",\n      MAJOR = "major",\n      MODEL = "model",\n      NAME = "name",\n      TYPE = "type",\n      VENDOR = "vendor",\n      VERSION = "version",\n      ARCHITECTURE = "architecture",\n      CONSOLE = "console",\n      MOBILE = "mobile",\n      TABLET = "tablet",\n      SMARTTV = "smarttv",\n      WEARABLE = "wearable",\n      EMBEDDED = "embedded",\n      UA_MAX_LENGTH = 255;\n  var util = {\n    extend: function extend(regexes, extensions) {\n      var mergedRegexes = {};\n\n      for (var i in regexes) {\n        if (extensions[i] && extensions[i].length % 2 === 0) {\n          mergedRegexes[i] = extensions[i].concat(regexes[i]);\n        } else {\n          mergedRegexes[i] = regexes[i];\n        }\n      }\n\n      return mergedRegexes;\n    },\n    has: function has(str1, str2) {\n      return typeof str1 === STR_TYPE ? str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1 : false;\n    },\n    lowerize: function lowerize(str) {\n      return str.toLowerCase();\n    },\n    major: function major(version) {\n      return typeof version === STR_TYPE ? version.replace(/[^\\d\\.]/g, "").split(".")[0] : undefined;\n    },\n    trim: function trim(str, len) {\n      str = str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, "");\n      return typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n    }\n  };\n  var mapper = {\n    rgx: function rgx(ua, arrays) {\n      var i = 0,\n          j,\n          k,\n          p,\n          q,\n          matches,\n          match;\n\n      while (i < arrays.length && !matches) {\n        var regex = arrays[i],\n            props = arrays[i + 1];\n        j = k = 0;\n\n        while (j < regex.length && !matches) {\n          matches = regex[j++].exec(ua);\n\n          if (!!matches) {\n            for (p = 0; p < props.length; p++) {\n              match = matches[++k];\n              q = props[p];\n\n              if (typeof q === OBJ_TYPE && q.length > 0) {\n                if (q.length == 2) {\n                  if (typeof q[1] == FUNC_TYPE) {\n                    this[q[0]] = q[1].call(this, match);\n                  } else {\n                    this[q[0]] = q[1];\n                  }\n                } else if (q.length == 3) {\n                  if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                    this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                  } else {\n                    this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                  }\n                } else if (q.length == 4) {\n                  this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                }\n              } else {\n                this[q] = match ? match : undefined;\n              }\n            }\n          }\n        }\n\n        i += 2;\n      }\n    },\n    str: function str(_str, map) {\n      for (var i in map) {\n        if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n          for (var j = 0; j < map[i].length; j++) {\n            if (util.has(map[i][j], _str)) {\n              return i === UNKNOWN ? undefined : i;\n            }\n          }\n        } else if (util.has(map[i], _str)) {\n          return i === UNKNOWN ? undefined : i;\n        }\n      }\n\n      return _str;\n    }\n  };\n  var maps = {\n    browser: {\n      oldSafari: {\n        version: {\n          "1.0": "/8",\n          1.2: "/1",\n          1.3: "/3",\n          "2.0": "/412",\n          "2.0.2": "/416",\n          "2.0.3": "/417",\n          "2.0.4": "/419",\n          "?": "/"\n        }\n      },\n      oldEdge: {\n        version: {\n          .1: "12.",\n          21: "13.",\n          31: "14.",\n          39: "15.",\n          41: "16.",\n          42: "17.",\n          44: "18."\n        }\n      }\n    },\n    os: {\n      windows: {\n        version: {\n          ME: "4.90",\n          "NT 3.11": "NT3.51",\n          "NT 4.0": "NT4.0",\n          2e3: "NT 5.0",\n          XP: ["NT 5.1", "NT 5.2"],\n          Vista: "NT 6.0",\n          7: "NT 6.1",\n          8: "NT 6.2",\n          8.1: "NT 6.3",\n          10: ["NT 6.4", "NT 10.0"],\n          RT: "ARM"\n        }\n      }\n    }\n  };\n  var regexes = {\n    browser: [[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i], [VERSION, [NAME, "Chrome"]], [/(?:edgios|edga|edg)\\/([\\w\\.]+)/i], [VERSION, [NAME, "Edge"]], [/edge\\/([\\w\\.]+)/i], [[VERSION, mapper.str, maps.browser.oldEdge.version], [NAME, "Edge"]], [/(opera\\smini)\\/([\\w\\.-]+)/i, /(opera\\s[mobiletab]{3,6})\\b.+version\\/([\\w\\.-]+)/i, /(opera)(?:.+version\\/|[\\/\\s]+)([\\w\\.]+)/i], [NAME, VERSION], [/opios[\\/\\s]+([\\w\\.]+)/i], [VERSION, [NAME, "Opera Mini"]], [/\\sopr\\/([\\w\\.]+)/i], [VERSION, [NAME, "Opera"]], [/(kindle)\\/([\\w\\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer|instagram)[\\/\\s]?([\\w\\.]*)/i, /(avant\\s|iemobile|slim)(?:browser)?[\\/\\s]?([\\w\\.]*)/i, /(ba?idubrowser)[\\/\\s]?([\\w\\.]+)/i, /(?:ms|\\()(ie)\\s([\\w\\.]+)/i, /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\\/([\\w\\.-]+)/i, /(rekonq|puffin|brave|whale|qqbrowserlite|qq)\\/([\\w\\.]+)/i, /(weibo)__([\\d\\.]+)/i], [NAME, VERSION], [/(?:[\\s\\/]uc?\\s?browser|(?:juc.+)ucweb)[\\/\\s]?([\\w\\.]+)/i], [VERSION, [NAME, "UCBrowser"]], [/(?:windowswechat)?\\sqbcore\\/([\\w\\.]+)\\b.*(?:windowswechat)?/i], [VERSION, [NAME, "WeChat(Win) Desktop"]], [/micromessenger\\/([\\w\\.]+)/i], [VERSION, [NAME, "WeChat"]], [/konqueror\\/([\\w\\.]+)/i], [VERSION, [NAME, "Konqueror"]], [/trident.+rv[:\\s]([\\w\\.]{1,9})\\b.+like\\sgecko/i], [VERSION, [NAME, "IE"]], [/yabrowser\\/([\\w\\.]+)/i], [VERSION, [NAME, "Yandex"]], [/(avast|avg)\\/([\\w\\.]+)/i], [[NAME, /(.+)/, "$1 Secure Browser"], VERSION], [/focus\\/([\\w\\.]+)/i], [VERSION, [NAME, "Firefox Focus"]], [/opt\\/([\\w\\.]+)/i], [VERSION, [NAME, "Opera Touch"]], [/coc_coc_browser\\/([\\w\\.]+)/i], [VERSION, [NAME, "Coc Coc"]], [/dolfin\\/([\\w\\.]+)/i], [VERSION, [NAME, "Dolphin"]], [/coast\\/([\\w\\.]+)/i], [VERSION, [NAME, "Opera Coast"]], [/xiaomi\\/miuibrowser\\/([\\w\\.]+)/i], [VERSION, [NAME, "MIUI Browser"]], [/fxios\\/([\\w\\.-]+)/i], [VERSION, [NAME, "Firefox"]], [/(qihu|qhbrowser|qihoobrowser|360browser)/i], [[NAME, "360 Browser"]], [/(oculus|samsung|sailfish)browser\\/([\\w\\.]+)/i], [[NAME, /(.+)/, "$1 Browser"], VERSION], [/(comodo_dragon)\\/([\\w\\.]+)/i], [[NAME, /_/g, " "], VERSION], [/m?(qqbrowser|baiduboxapp|2345Explorer)[\\/\\s]?([\\w\\.]+)/i], [NAME, VERSION], [/(MetaSr)[\\/\\s]?([\\w\\.]+)/i, /(LBBROWSER)/i], [NAME], [/;fbav\\/([\\w\\.]+);/i], [VERSION, [NAME, "Facebook"]], [/FBAN\\/FBIOS|FB_IAB\\/FB4A/i], [[NAME, "Facebook"]], [/\\s(electron)\\/([\\w\\.]+)\\ssafari/i, /safari\\s(line)\\/([\\w\\.]+)/i, /\\b(line)\\/([\\w\\.]+)\\/iab/i], [NAME, VERSION], [/\\bgsa\\/([\\w\\.]+)\\s.*safari\\//i], [VERSION, [NAME, "GSA"]], [/headlesschrome(?:\\/([\\w\\.]+)|\\s)/i], [VERSION, [NAME, "Chrome Headless"]], [/\\swv\\).+(chrome)\\/([\\w\\.]+)/i], [[NAME, "Chrome WebView"], VERSION], [/droid.+\\sversion\\/([\\w\\.]+)\\b.+(?:mobile\\ssafari|safari)/i], [VERSION, [NAME, "Android Browser"]], [/(chrome|omniweb|arora|[tizenoka]{5}\\s?browser)\\/v?([\\w\\.]+)/i], [NAME, VERSION], [/version\\/([\\w\\.]+)\\s.*mobile\\/\\w+\\s(safari)/i], [VERSION, [NAME, "Mobile Safari"]], [/version\\/([\\w\\.]+)\\s.*(mobile\\s?safari|safari)/i], [VERSION, NAME], [/webkit.+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i], [NAME, [VERSION, mapper.str, maps.browser.oldSafari.version]], [/(webkit|khtml)\\/([\\w\\.]+)/i], [NAME, VERSION], [/(navigator|netscape)\\/([\\w\\.-]+)/i], [[NAME, "Netscape"], VERSION], [/ile\\svr;\\srv:([\\w\\.]+)\\).+firefox/i], [VERSION, [NAME, "Firefox Reality"]], [/ekiohf.+(flow)\\/([\\w\\.]+)/i, /(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo\\sbrowser|minimo|conkeror)[\\/\\s]?([\\w\\.\\+]+)/i, /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([\\w\\.-]+)$/i, /(firefox)\\/([\\w\\.]+)\\s[\\w\\s\\-]+\\/[\\w\\.]+$/i, /(mozilla)\\/([\\w\\.]+)\\s.+rv\\:.+gecko\\/\\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\/\\s]?([\\w\\.]+)/i, /(links)\\s\\(([\\w\\.]+)/i, /(gobrowser)\\/?([\\w\\.]*)/i, /(ice\\s?browser)\\/v?([\\w\\._]+)/i, /(mosaic)[\\/\\s]([\\w\\.]+)/i], [NAME, VERSION]],\n    cpu: [[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i], [[ARCHITECTURE, "amd64"]], [/(ia32(?=;))/i], [[ARCHITECTURE, util.lowerize]], [/((?:i[346]|x)86)[;\\)]/i], [[ARCHITECTURE, "ia32"]], [/\\b(aarch64|armv?8e?l?)\\b/i], [[ARCHITECTURE, "arm64"]], [/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i], [[ARCHITECTURE, "armhf"]], [/windows\\s(ce|mobile);\\sppc;/i], [[ARCHITECTURE, "arm"]], [/((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i], [[ARCHITECTURE, /ower/, "", util.lowerize]], [/(sun4\\w)[;\\)]/i], [[ARCHITECTURE, "sparc"]], [/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?:64|(?=v(?:[1-7]|[5-7]1)l?|;|eabi))|(?=atmel\\s)avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i], [[ARCHITECTURE, util.lowerize]]],\n    device: [[/\\b(sch-i[89]0\\d|shw-m380s|sm-[pt]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus\\s10)/i], [MODEL, [VENDOR, "Samsung"], [TYPE, TABLET]], [/\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy\\snexus)/i, /\\ssamsung[\\s-]([\\w-]+)/i, /sec-(sgh\\w+)/i], [MODEL, [VENDOR, "Samsung"], [TYPE, MOBILE]], [/\\((ip(?:hone|od)[\\s\\w]*);/i], [MODEL, [VENDOR, "Apple"], [TYPE, MOBILE]], [/\\((ipad);[\\w\\s\\),;-]+apple/i, /applecoremedia\\/[\\w\\.]+\\s\\((ipad)/i, /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i], [MODEL, [VENDOR, "Apple"], [TYPE, TABLET]], [/\\b((?:agr|ags[23]|bah2?|sht?)-a?[lw]\\d{2})/i], [MODEL, [VENDOR, "Huawei"], [TYPE, TABLET]], [/d\\/huawei([\\w\\s-]+)[;\\)]/i, /\\b(nexus\\s6p|vog-[at]?l\\d\\d|ane-[at]?l[x\\d]\\d|eml-a?l\\d\\da?|lya-[at]?l\\d[\\dc]|clt-a?l\\d\\di?|ele-l\\d\\d)/i, /\\b(\\w{2,4}-[atu][ln][01259][019])[;\\)\\s]/i], [MODEL, [VENDOR, "Huawei"], [TYPE, MOBILE]], [/\\b(poco[\\s\\w]+)(?:\\sbuild|\\))/i, /\\b;\\s(\\w+)\\sbuild\\/hm\\1/i, /\\b(hm[\\s\\-_]?note?[\\s_]?(?:\\d\\w)?)\\sbuild/i, /\\b(redmi[\\s\\-_]?(?:note|k)?[\\w\\s_]+)(?:\\sbuild|\\))/i, /\\b(mi[\\s\\-_]?(?:a\\d|one|one[\\s_]plus|note lte)?[\\s_]?(?:\\d?\\w?)[\\s_]?(?:plus)?)\\sbuild/i], [[MODEL, /_/g, " "], [VENDOR, "Xiaomi"], [TYPE, MOBILE]], [/\\b(mi[\\s\\-_]?(?:pad)(?:[\\w\\s_]+))(?:\\sbuild|\\))/i], [[MODEL, /_/g, " "], [VENDOR, "Xiaomi"], [TYPE, TABLET]], [/;\\s(\\w+)\\sbuild.+\\soppo/i, /\\s(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007)\\b/i], [MODEL, [VENDOR, "OPPO"], [TYPE, MOBILE]], [/\\svivo\\s(\\w+)(?:\\sbuild|\\))/i, /\\s(v[12]\\d{3}\\w?[at])(?:\\sbuild|;)/i], [MODEL, [VENDOR, "Vivo"], [TYPE, MOBILE]], [/\\s(rmx[12]\\d{3})(?:\\sbuild|;)/i], [MODEL, [VENDOR, "Realme"], [TYPE, MOBILE]], [/\\s(milestone|droid(?:[2-4x]|\\s(?:bionic|x2|pro|razr))?:?(\\s4g)?)\\b[\\w\\s]+build\\//i, /\\smot[\\s-](\\w*)/i, /((?:moto[\\s\\w\\(\\)]+|xt\\d{3,4}|nexus\\s6)(?=\\sbuild|\\)))/i], [MODEL, [VENDOR, "Motorola"], [TYPE, MOBILE]], [/\\s(mz60\\d|xoom[\\s2]{0,2})\\sbuild\\//i], [MODEL, [VENDOR, "Motorola"], [TYPE, TABLET]], [/((?=lg)?[vl]k\\-?\\d{3})\\sbuild|\\s3\\.[\\s\\w;-]{10}lg?-([06cv9]{3,4})/i], [MODEL, [VENDOR, "LG"], [TYPE, TABLET]], [/(nexus\\s[45])/i, /lg[e;\\s\\/-]+((?!browser|netcast)\\w+)/i, /\\blg(\\-?[\\d\\w]+)\\sbuild/i], [MODEL, [VENDOR, "LG"], [TYPE, MOBILE]], [/(ideatab[\\w\\-\\s]+)/i, /lenovo\\s?(s(?:5000|6000)(?:[\\w-]+)|tab(?:[\\s\\w]+)|yt[\\d\\w-]{6}|tb[\\d\\w-]{6})/i], [MODEL, [VENDOR, "Lenovo"], [TYPE, TABLET]], [/(?:maemo|nokia).*(n900|lumia\\s\\d+)/i, /nokia[\\s_-]?([\\w\\.-]*)/i], [MODEL, [VENDOR, "Nokia"], [TYPE, MOBILE]], [/droid.+;\\s(pixel\\sc)[\\s)]/i], [MODEL, [VENDOR, "Google"], [TYPE, TABLET]], [/droid.+;\\s(pixel[\\s\\daxl]{0,6})(?:\\sbuild|\\))/i], [MODEL, [VENDOR, "Google"], [TYPE, MOBILE]], [/droid.+\\s([c-g]\\d{4}|so[-l]\\w+|xq-a\\w[4-7][12])(?=\\sbuild\\/|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i], [MODEL, [VENDOR, "Sony"], [TYPE, MOBILE]], [/sony\\stablet\\s[ps]\\sbuild\\//i, /(?:sony)?sgp\\w+(?:\\sbuild\\/|\\))/i], [[MODEL, "Xperia Tablet"], [VENDOR, "Sony"], [TYPE, TABLET]], [/\\s(kb2005|in20[12]5|be20[12][59])\\b/i, /\\ba000(1)\\sbuild/i, /\\boneplus\\s(a\\d{4})[\\s)]/i], [MODEL, [VENDOR, "OnePlus"], [TYPE, MOBILE]], [/(alexa)webm/i, /(kf[a-z]{2}wi)(\\sbuild\\/|\\))/i, /(kf[a-z]+)(\\sbuild\\/|\\)).+silk\\//i], [MODEL, [VENDOR, "Amazon"], [TYPE, TABLET]], [/(sd|kf)[0349hijorstuw]+(\\sbuild\\/|\\)).+silk\\//i], [[MODEL, "Fire Phone"], [VENDOR, "Amazon"], [TYPE, MOBILE]], [/\\((playbook);[\\w\\s\\),;-]+(rim)/i], [MODEL, VENDOR, [TYPE, TABLET]], [/\\(bb10;\\s(\\w+)/i], [MODEL, [VENDOR, "BlackBerry"], [TYPE, MOBILE]], [/(?:\\b|asus_)(transfo[prime\\s]{4,10}\\s\\w+|eeepc|slider\\s\\w+|nexus\\s7|padfone|p00[cj])/i], [MODEL, [VENDOR, "ASUS"], [TYPE, TABLET]], [/\\s(z[es]6[027][01][km][ls]|zenfone\\s\\d\\w?)\\b/i], [MODEL, [VENDOR, "ASUS"], [TYPE, MOBILE]], [/(nexus\\s9)/i], [MODEL, [VENDOR, "HTC"], [TYPE, TABLET]], [/(htc)[;_\\s-]{1,2}([\\w\\s]+(?=\\)|\\sbuild)|\\w+)/i, /(zte)-(\\w*)/i, /(alcatel|geeksphone|nexian|panasonic|(?=;\\s)sony)[_\\s-]?([\\w-]*)/i], [VENDOR, [MODEL, /_/g, " "], [TYPE, MOBILE]], [/droid[x\\d\\.\\s;]+\\s([ab][1-7]\\-?[0178a]\\d\\d?)/i], [MODEL, [VENDOR, "Acer"], [TYPE, TABLET]], [/droid.+;\\s(m[1-5]\\snote)\\sbuild/i, /\\bmz-([\\w-]{2,})/i], [MODEL, [VENDOR, "Meizu"], [TYPE, MOBILE]], [/(blackberry)[\\s-]?(\\w+)/i, /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\\s_-]?([\\w-]*)/i, /(hp)\\s([\\w\\s]+\\w)/i, /(asus)-?(\\w+)/i, /(microsoft);\\s(lumia[\\s\\w]+)/i, /(lenovo)[_\\s-]?([\\w-]+)/i, /linux;.+(jolla);/i, /droid.+;\\s(oppo)\\s?([\\w\\s]+)\\sbuild/i], [VENDOR, MODEL, [TYPE, MOBILE]], [/(archos)\\s(gamepad2?)/i, /(hp).+(touchpad(?!.+tablet)|tablet)/i, /(kindle)\\/([\\w\\.]+)/i, /\\s(nook)[\\w\\s]+build\\/(\\w+)/i, /(dell)\\s(strea[kpr\\s\\d]*[\\dko])/i, /[;\\/]\\s?(le[\\s\\-]+pan)[\\s\\-]+(\\w{1,9})\\sbuild/i, /[;\\/]\\s?(trinity)[\\-\\s]*(t\\d{3})\\sbuild/i, /\\b(gigaset)[\\s\\-]+(q\\w{1,9})\\sbuild/i, /\\b(vodafone)\\s([\\w\\s]+)(?:\\)|\\sbuild)/i], [VENDOR, MODEL, [TYPE, TABLET]], [/\\s(surface\\sduo)\\s/i], [MODEL, [VENDOR, "Microsoft"], [TYPE, TABLET]], [/droid\\s[\\d\\.]+;\\s(fp\\du?)\\sbuild/i], [MODEL, [VENDOR, "Fairphone"], [TYPE, MOBILE]], [/\\s(u304aa)\\sbuild/i], [MODEL, [VENDOR, "AT&T"], [TYPE, MOBILE]], [/sie-(\\w*)/i], [MODEL, [VENDOR, "Siemens"], [TYPE, MOBILE]], [/[;\\/]\\s?(rct\\w+)\\sbuild/i], [MODEL, [VENDOR, "RCA"], [TYPE, TABLET]], [/[;\\/\\s](venue[\\d\\s]{2,7})\\sbuild/i], [MODEL, [VENDOR, "Dell"], [TYPE, TABLET]], [/[;\\/]\\s?(q(?:mv|ta)\\w+)\\sbuild/i], [MODEL, [VENDOR, "Verizon"], [TYPE, TABLET]], [/[;\\/]\\s(?:barnes[&\\s]+noble\\s|bn[rt])([\\w\\s\\+]*)\\sbuild/i], [MODEL, [VENDOR, "Barnes & Noble"], [TYPE, TABLET]], [/[;\\/]\\s(tm\\d{3}\\w+)\\sbuild/i], [MODEL, [VENDOR, "NuVision"], [TYPE, TABLET]], [/;\\s(k88)\\sbuild/i], [MODEL, [VENDOR, "ZTE"], [TYPE, TABLET]], [/;\\s(nx\\d{3}j)\\sbuild/i], [MODEL, [VENDOR, "ZTE"], [TYPE, MOBILE]], [/[;\\/]\\s?(gen\\d{3})\\sbuild.*49h/i], [MODEL, [VENDOR, "Swiss"], [TYPE, MOBILE]], [/[;\\/]\\s?(zur\\d{3})\\sbuild/i], [MODEL, [VENDOR, "Swiss"], [TYPE, TABLET]], [/[;\\/]\\s?((zeki)?tb.*\\b)\\sbuild/i], [MODEL, [VENDOR, "Zeki"], [TYPE, TABLET]], [/[;\\/]\\s([yr]\\d{2})\\sbuild/i, /[;\\/]\\s(dragon[\\-\\s]+touch\\s|dt)(\\w{5})\\sbuild/i], [[VENDOR, "Dragon Touch"], MODEL, [TYPE, TABLET]], [/[;\\/]\\s?(ns-?\\w{0,9})\\sbuild/i], [MODEL, [VENDOR, "Insignia"], [TYPE, TABLET]], [/[;\\/]\\s?((nxa|Next)-?\\w{0,9})\\sbuild/i], [MODEL, [VENDOR, "NextBook"], [TYPE, TABLET]], [/[;\\/]\\s?(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05]))\\sbuild/i], [[VENDOR, "Voice"], MODEL, [TYPE, MOBILE]], [/[;\\/]\\s?(lvtel\\-)?(v1[12])\\sbuild/i], [[VENDOR, "LvTel"], MODEL, [TYPE, MOBILE]], [/;\\s(ph-1)\\s/i], [MODEL, [VENDOR, "Essential"], [TYPE, MOBILE]], [/[;\\/]\\s?(v(100md|700na|7011|917g).*\\b)\\sbuild/i], [MODEL, [VENDOR, "Envizen"], [TYPE, TABLET]], [/[;\\/]\\s?(trio[\\s\\w\\-\\.]+)\\sbuild/i], [MODEL, [VENDOR, "MachSpeed"], [TYPE, TABLET]], [/[;\\/]\\s?tu_(1491)\\sbuild/i], [MODEL, [VENDOR, "Rotor"], [TYPE, TABLET]], [/(shield[\\w\\s]+)\\sbuild/i], [MODEL, [VENDOR, "Nvidia"], [TYPE, TABLET]], [/(sprint)\\s(\\w+)/i], [VENDOR, MODEL, [TYPE, MOBILE]], [/(kin\\.[onetw]{3})/i], [[MODEL, /\\./g, " "], [VENDOR, "Microsoft"], [TYPE, MOBILE]], [/droid\\s[\\d\\.]+;\\s(cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i], [MODEL, [VENDOR, "Zebra"], [TYPE, TABLET]], [/droid\\s[\\d\\.]+;\\s(ec30|ps20|tc[2-8]\\d[kx])\\)/i], [MODEL, [VENDOR, "Zebra"], [TYPE, MOBILE]], [/\\s(ouya)\\s/i, /(nintendo)\\s([wids3utch]+)/i], [VENDOR, MODEL, [TYPE, CONSOLE]], [/droid.+;\\s(shield)\\sbuild/i], [MODEL, [VENDOR, "Nvidia"], [TYPE, CONSOLE]], [/(playstation\\s[345portablevi]+)/i], [MODEL, [VENDOR, "Sony"], [TYPE, CONSOLE]], [/[\\s\\(;](xbox(?:\\sone)?(?!;\\sxbox))[\\s\\);]/i], [MODEL, [VENDOR, "Microsoft"], [TYPE, CONSOLE]], [/smart-tv.+(samsung)/i], [VENDOR, [TYPE, SMARTTV]], [/hbbtv.+maple;(\\d+)/i], [[MODEL, /^/, "SmartTV"], [VENDOR, "Samsung"], [TYPE, SMARTTV]], [/(?:linux;\\snetcast.+smarttv|lg\\snetcast\\.tv-201\\d)/i], [[VENDOR, "LG"], [TYPE, SMARTTV]], [/(apple)\\s?tv/i], [VENDOR, [MODEL, "Apple TV"], [TYPE, SMARTTV]], [/crkey/i], [[MODEL, "Chromecast"], [VENDOR, "Google"], [TYPE, SMARTTV]], [/droid.+aft([\\w])(\\sbuild\\/|\\))/i], [MODEL, [VENDOR, "Amazon"], [TYPE, SMARTTV]], [/\\(dtv[\\);].+(aquos)/i], [MODEL, [VENDOR, "Sharp"], [TYPE, SMARTTV]], [/hbbtv\\/\\d+\\.\\d+\\.\\d+\\s+\\([\\w\\s]*;\\s*(\\w[^;]*);([^;]*)/i], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, SMARTTV]], [/[\\s\\/\\(](android\\s|smart[-\\s]?|opera\\s)tv[;\\)\\s]/i], [[TYPE, SMARTTV]], [/((pebble))app\\/[\\d\\.]+\\s/i], [VENDOR, MODEL, [TYPE, WEARABLE]], [/droid.+;\\s(glass)\\s\\d/i], [MODEL, [VENDOR, "Google"], [TYPE, WEARABLE]], [/droid\\s[\\d\\.]+;\\s(wt63?0{2,3})\\)/i], [MODEL, [VENDOR, "Zebra"], [TYPE, WEARABLE]], [/droid .+?; ([^;]+?)(?: build|\\) applewebkit).+? mobile safari/i], [MODEL, [TYPE, MOBILE]], [/droid .+?;\\s([^;]+?)(?: build|\\) applewebkit).+?(?! mobile) safari/i], [MODEL, [TYPE, TABLET]], [/\\s(tablet|tab)[;\\/]/i, /\\s(mobile)(?:[;\\/]|\\ssafari)/i], [[TYPE, util.lowerize]], [/(android[\\w\\.\\s\\-]{0,9});.+build/i], [MODEL, [VENDOR, "Generic"]], [/(phone)/i], [[TYPE, MOBILE]]],\n    engine: [[/windows.+\\sedge\\/([\\w\\.]+)/i], [VERSION, [NAME, "EdgeHTML"]], [/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i], [VERSION, [NAME, "Blink"]], [/(presto)\\/([\\w\\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, /ekioh(flow)\\/([\\w\\.]+)/i, /(khtml|tasman|links)[\\/\\s]\\(?([\\w\\.]+)/i, /(icab)[\\/\\s]([23]\\.[\\d\\.]+)/i], [NAME, VERSION], [/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i], [VERSION, NAME]],\n    os: [[/microsoft\\s(windows)\\s(vista|xp)/i], [NAME, VERSION], [/(windows)\\snt\\s6\\.2;\\s(arm)/i, /(windows\\sphone(?:\\sos)*)[\\s\\/]?([\\d\\.\\s\\w]*)/i, /(windows\\smobile|windows)[\\s\\/]?([ntce\\d\\.\\s]+\\w)(?!.+xbox)/i], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [/(win(?=3|9|n)|win\\s9x\\s)([nt\\d\\.]+)/i], [[NAME, "Windows"], [VERSION, mapper.str, maps.os.windows.version]], [/ip[honead]{2,4}\\b(?:.*os\\s([\\w]+)\\slike\\smac|;\\sopera)/i, /cfnetwork\\/.+darwin/i], [[VERSION, /_/g, "."], [NAME, "iOS"]], [/(mac\\sos\\sx)\\s?([\\w\\s\\.]*)/i, /(macintosh|mac(?=_powerpc)\\s)(?!.+haiku)/i], [[NAME, "Mac OS"], [VERSION, /_/g, "."]], [/(android|webos|palm\\sos|qnx|bada|rim\\stablet\\sos|meego|sailfish|contiki)[\\/\\s-]?([\\w\\.]*)/i, /(blackberry)\\w*\\/([\\w\\.]*)/i, /(tizen|kaios)[\\/\\s]([\\w\\.]+)/i, /\\((series40);/i], [NAME, VERSION], [/\\(bb(10);/i], [VERSION, [NAME, "BlackBerry"]], [/(?:symbian\\s?os|symbos|s60(?=;)|series60)[\\/\\s-]?([\\w\\.]*)/i], [VERSION, [NAME, "Symbian"]], [/mozilla.+\\(mobile;.+gecko.+firefox/i], [[NAME, "Firefox OS"]], [/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i], [VERSION, [NAME, "webOS"]], [/crkey\\/([\\d\\.]+)/i], [VERSION, [NAME, "Chromecast"]], [/(cros)\\s[\\w]+\\s([\\w\\.]+\\w)/i], [[NAME, "Chromium OS"], VERSION], [/(nintendo|playstation)\\s([wids345portablevuch]+)/i, /(xbox);\\s+xbox\\s([^\\);]+)/i, /(mint)[\\/\\s\\(\\)]?(\\w*)/i, /(mageia|vectorlinux)[;\\s]/i, /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?=\\slinux)|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus|raspbian)(?:\\sgnu\\/linux)?(?:\\slinux)?[\\/\\s-]?(?!chrom|package)([\\w\\.-]*)/i, /(hurd|linux)\\s?([\\w\\.]*)/i, /(gnu)\\s?([\\w\\.]*)/i, /\\s([frentopc-]{0,4}bsd|dragonfly)\\s?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, /(haiku)\\s(\\w+)/i], [NAME, VERSION], [/(sunos)\\s?([\\w\\.\\d]*)/i], [[NAME, "Solaris"], VERSION], [/((?:open)?solaris)[\\/\\s-]?([\\w\\.]*)/i, /(aix)\\s((\\d)(?=\\.|\\)|\\s)[\\w\\.])*/i, /(plan\\s9|minix|beos|os\\/2|amigaos|morphos|risc\\sos|openvms|fuchsia)/i, /(unix)\\s?([\\w\\.]*)/i], [NAME, VERSION]]\n  };\n\n  var UAParser = function UAParser(ua, extensions) {\n    if (typeof ua === "object") {\n      extensions = ua;\n      ua = undefined;\n    }\n\n    if (!(this instanceof UAParser)) {\n      return new UAParser(ua, extensions).getResult();\n    }\n\n    var _ua = ua || (typeof window !== "undefined" && window.navigator && window.navigator.userAgent ? window.navigator.userAgent : EMPTY);\n\n    var _rgxmap = extensions ? util.extend(regexes, extensions) : regexes;\n\n    this.getBrowser = function () {\n      var _browser = {\n        name: undefined,\n        version: undefined\n      };\n      mapper.rgx.call(_browser, _ua, _rgxmap.browser);\n      _browser.major = util.major(_browser.version);\n      return _browser;\n    };\n\n    this.getCPU = function () {\n      var _cpu = {\n        architecture: undefined\n      };\n      mapper.rgx.call(_cpu, _ua, _rgxmap.cpu);\n      return _cpu;\n    };\n\n    this.getDevice = function () {\n      var _device = {\n        vendor: undefined,\n        model: undefined,\n        type: undefined\n      };\n      mapper.rgx.call(_device, _ua, _rgxmap.device);\n      return _device;\n    };\n\n    this.getEngine = function () {\n      var _engine = {\n        name: undefined,\n        version: undefined\n      };\n      mapper.rgx.call(_engine, _ua, _rgxmap.engine);\n      return _engine;\n    };\n\n    this.getOS = function () {\n      var _os = {\n        name: undefined,\n        version: undefined\n      };\n      mapper.rgx.call(_os, _ua, _rgxmap.os);\n      return _os;\n    };\n\n    this.getResult = function () {\n      return {\n        ua: this.getUA(),\n        browser: this.getBrowser(),\n        engine: this.getEngine(),\n        os: this.getOS(),\n        device: this.getDevice(),\n        cpu: this.getCPU()\n      };\n    };\n\n    this.getUA = function () {\n      return _ua;\n    };\n\n    this.setUA = function (ua) {\n      _ua = typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH ? util.trim(ua, UA_MAX_LENGTH) : ua;\n      return this;\n    };\n\n    this.setUA(_ua);\n    return this;\n  };\n\n  UAParser.VERSION = LIBVERSION;\n  UAParser.BROWSER = {\n    NAME: NAME,\n    MAJOR: MAJOR,\n    VERSION: VERSION\n  };\n  UAParser.CPU = {\n    ARCHITECTURE: ARCHITECTURE\n  };\n  UAParser.DEVICE = {\n    MODEL: MODEL,\n    VENDOR: VENDOR,\n    TYPE: TYPE,\n    CONSOLE: CONSOLE,\n    MOBILE: MOBILE,\n    SMARTTV: SMARTTV,\n    TABLET: TABLET,\n    WEARABLE: WEARABLE,\n    EMBEDDED: EMBEDDED\n  };\n  UAParser.ENGINE = {\n    NAME: NAME,\n    VERSION: VERSION\n  };\n  UAParser.OS = {\n    NAME: NAME,\n    VERSION: VERSION\n  };\n\n  if (typeof exports !== UNDEF_TYPE) {\n    if ("object" !== UNDEF_TYPE && module.exports) {\n      exports = module.exports = UAParser;\n    }\n\n    exports.UAParser = UAParser;\n  } else {\n    if (true) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return UAParser;\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n  }\n\n  var $ = typeof window !== "undefined" && (window.jQuery || window.Zepto);\n\n  if ($ && !$.ua) {\n    var parser = new UAParser();\n    $.ua = parser.getResult();\n\n    $.ua.get = function () {\n      return parser.getUA();\n    };\n\n    $.ua.set = function (uastring) {\n      parser.setUA(uastring);\n      var result = parser.getResult();\n\n      for (var prop in result) {\n        $.ua[prop] = result[prop];\n      }\n    };\n  }\n})(typeof window === "object" ? window : this);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4889\n')},4275:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ TheFandomPage; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js + 1 modules\nvar inheritsLoose = __webpack_require__(3552);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./src/components/seo.js + 1 modules\nvar seo = __webpack_require__(3751);\n// EXTERNAL MODULE: ./src/components/navigationBar.js + 124 modules\nvar navigationBar = __webpack_require__(3165);\n// EXTERNAL MODULE: ./node_modules/react-device-detect/main.js\nvar main = __webpack_require__(1677);\n;// CONCATENATED MODULE: ./src/components/canvas/canvas.js\nvar canvas=null;var zoom=1;var allImages;var lightBox;var lightBoxImageDiv;// credit: https://jsfiddle.net/fvzj7z1d/7/\nfunction setCanvasZoom(zoom){var objects=canvas.getObjects();for(var i in objects){var object=objects[i];var scaleX=object.scaleX,scaleY=object.scaleY,left=object.left,top=object.top;// preserve the original dimensions.\nobject.original_scaleX=!object.original_scaleX?scaleX:object.original_scaleX;object.original_scaleY=!object.original_scaleY?scaleY:object.original_scaleY;object.original_left=!object.original_left?left:object.original_left;object.original_top=!object.original_top?top:object.original_top;object.scaleX=object.original_scaleX*zoom;object.scaleY=object.original_scaleY*zoom;object.left=object.original_left*zoom;object.top=object.original_top*zoom;object.setCoords();}};var widthPadding=0;var heightPadding=0;var Canvas=/*#__PURE__*/function(_React$Component){(0,inheritsLoose/* default */.Z)(Canvas,_React$Component);function Canvas(props){var _this;_this=_React$Component.call(this,props)||this;_this.state={canvas:null};_this.state.images=props.images;lightBox=props.lightBox;lightBoxImageDiv=props.lightBoxImageDiv;widthPadding=props.widthPadding||0;heightPadding=props.heightPadding||0;return _this;}var _proto=Canvas.prototype;_proto.componentDidMount=function componentDidMount(){if(typeof window!=="undefined"){allImages=this.state.images;var fabric=__webpack_require__(6927).fabric;canvas=new fabric.Canvas("imageboard");canvas.selection=false;canvas.backgroundColor=\'white\';canvas.setDimensions({width:window.innerWidth-widthPadding,height:window.innerHeight-heightPadding});window.onresize=function(){var width=window.innerWidth-widthPadding;var height=window.innerHeight-heightPadding;canvas.setDimensions({width:width,height:height});setCanvasZoom(width/1710);//canvas.calcOffset();\ncanvas.renderAll();};//zoom function\ncanvas.on("mouse:wheel",function(opt){var delta=opt.e.deltaY;zoom=canvas.getZoom();zoom*=Math.pow(0.999,delta);if(zoom>10)zoom=10;if(zoom<1)zoom=1;canvas.zoomToPoint({x:opt.e.offsetX,y:opt.e.offsetY},zoom);opt.e.preventDefault();opt.e.stopPropagation();});// drag function\ncanvas.on("mouse:down",function(opt){this.hasMoved=false;console.log(this.viewportTransform);var evt=opt.e;var x=0;var y=0;console.log(evt);if(evt.clientX!=null){x=evt.clientX;y=evt.clientY;}else{x=evt.changedTouches[0].clientX;y=evt.changedTouches[0].clientY;}this.isDragging=true;this.lastPosX=x;this.lastPosY=y;});canvas.on("mouse:move",function(opt){if(this.isDragging){this.hasMoved=true;var evt=opt.e;var x=0;var y=0;// console.log(evt)\nif(evt.clientX!=null){x=evt.clientX;y=evt.clientY;}else{x=evt.changedTouches[0].clientX;y=evt.changedTouches[0].clientY;}var vpt=this.viewportTransform;vpt[4]+=x-this.lastPosX;vpt[5]+=y-this.lastPosY;this.requestRenderAll();this.lastPosX=x;this.lastPosY=y;}});canvas.on("mouse:up",function(opt){this.setViewportTransform(this.viewportTransform);this.isDragging=false;if(!this.hasMoved){var _opt$target;console.log(opt);var index=(_opt$target=opt.target)===null||_opt$target===void 0?void 0:_opt$target.tooltipRef;if(allImages[index]!=null){var toolTip=document.getElementById(lightBox);toolTip.style.visibility=\'visible\';console.log("pop up");document.getElementById(lightBoxImageDiv).src=allImages[index].src;}}});canvas.on("mouse:over",function(e){// let index = e.target?.tooltipRef\n// if (allImages[index] != null)\n// {\n//   var toolTip = document.getElementById(lightBox)\n//   toolTip.style.visibility = \'visible\'\n//   toolTip.style.backgroundImage = "url(" + allImages[index].src + ")"\n//   document.getElementById("tooltip-message").innerHTML = allImages[index].message\n//   document.getElementById("tooltip-author").innerHTML = allImages[index].artist\n//   this.isHover = true\n// }\n});canvas.on("mouse:out",function(e){// let index = e.target?.tooltipRef\n// if (allImages[index] != null) {\n//   var toolTip = document.getElementById(lightBox)\n//   toolTip.style.visibility = \'hidden\'\n//   this.isHover = false\n// }\n});// canvas.on(\'after:render\', function() {\n//   setCanvasZoom(window.innerWidth / 1710)\n// });\nthis.state.images.forEach(function(imageItem,index){var image=new Image();image.src=imageItem.src;image.onload=function(){zoom=(window.innerWidth-widthPadding)/1710;var imgInstance=new fabric.Image(image,{left:imageItem.left*zoom,top:imageItem.top*zoom,original_left:imageItem.left,original_top:imageItem.top,angle:imageItem.angle,opacity:imageItem.opacity,scaleX:imageItem.scaleX*zoom,scaleY:imageItem.scaleY*zoom,original_scaleX:imageItem.scaleX,original_scaleY:imageItem.scaleY});//dissables to select this image\nimgInstance.set("selectable",false);imgInstance.set("tooltipRef",index);canvas.add(imgInstance);};});}};_proto.render=function render(){return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement("div",{id:"canvas-container"},/*#__PURE__*/react.createElement("canvas",{style:{border:"solid 1px #555"},id:"imageboard"})));};return Canvas;}(react.Component);\n// EXTERNAL MODULE: ./src/components/react-photo-gallery/Gallery.js + 9 modules\nvar Gallery = __webpack_require__(4969);\n;// CONCATENATED MODULE: ./src/images/dontstarve.jpeg\n/* harmony default export */ var dontstarve = (__webpack_require__.p + "static/dontstarve-7bfa6be12ab73c2f10d5b7f4d2cf7b90.jpeg");\n;// CONCATENATED MODULE: ./src/images/milfkiara.jpeg\n/* harmony default export */ var milfkiara = (__webpack_require__.p + "static/milfkiara-02af8ad9df7e9047e71fa8b289a709ef.jpeg");\n;// CONCATENATED MODULE: ./src/images/smolltakamori.jpeg\n/* harmony default export */ var smolltakamori = (__webpack_require__.p + "static/smolltakamori-a45ec3f5cd9a7bdabdeadf87792637da.jpeg");\n;// CONCATENATED MODULE: ./src/pages/art/artCanvas.js\nvar TheFandomPage=/*#__PURE__*/function(_React$Component){(0,inheritsLoose/* default */.Z)(TheFandomPage,_React$Component);function TheFandomPage(){var _this;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this;_this.state={};return _this;}var _proto=TheFandomPage.prototype;_proto.render=function render(){return/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement("div",{role:"button",tabIndex:"0",id:"toolTip",onClick:DisableLightBox,onKeyDown:DisableLightBox},/*#__PURE__*/react.createElement("div",{className:"imageDiv"},/*#__PURE__*/react.createElement("img",{alt:"fan artwork",id:"image"}))),/*#__PURE__*/react.createElement(seo/* default */.Z,{title:"Home"}),/*#__PURE__*/react.createElement(navigationBar/* default */.Z,{siteTitle:"Kiara Million"}),/*#__PURE__*/react.createElement("div",{className:"art-canvas-content"},/*#__PURE__*/react.createElement("h1",null,"Art Canvas"),main/* isBrowser */.jU?/*#__PURE__*/react.createElement(Canvas,{images:artCanvas_images,widthPadding:32,heightPadding:142,lightBox:"toolTip",lightBoxImageDiv:"image"}):/*#__PURE__*/react.createElement(Gallery/* default */.Z,{photos:artCanvas_images,margin:5,direction:"column"})));};return TheFandomPage;}(react.Component);function DisableLightBox(e){var toolTip=document.getElementById("toolTip");if(e.target!==toolTip){return;}toolTip.style.visibility=\'hidden\';}var artCanvas_images=[{src:dontstarve,// - For gallery\nwidth:1,height:0.4464,// - For canvas\nleft:0,top:0,angle:0,opacity:1,scaleX:0.3,scaleY:0.3,message:"Nunc sed blandit libero volutpat. Nullam vehicula ipsum a arcu cursus vitae congue mauris rhoncus. Neque volutpat ac tincidunt vitae semper quis lectus nulla. Elit duis tristique sollicitudin nibh sit amet commodo.",artist:"Yagoo 1"},{src:milfkiara,width:1,height:1.2449,left:1490,top:0,angle:0,opacity:1,scaleX:0.3,scaleY:0.3,message:"Nunc sed blandit libero volutpat. Nullam vehicula ipsum a arcu cursus vitae congue mauris rhoncus. Neque volutpat ac tincidunt vitae semper quis lectus nulla. Elit duis tristique sollicitudin nibh sit amet commodo.",artist:"Yagoo 2"},{src:smolltakamori,width:1,height:1.7042,left:500,top:600,angle:0,opacity:1,scaleX:0.2,scaleY:0.2,message:"Nunc sed blandit libero volutpat. Nullam vehicula ipsum a arcu cursus vitae congue mauris rhoncus. Neque volutpat ac tincidunt vitae semper quis lectus nulla. Elit duis tristique sollicitudin nibh sit amet commodo.",artist:"Yagoo 3"}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4275\n')},2347:function(){},9095:function(){},7351:function(){}}]);