{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/canvas/main.js","webpack://gatsby-starter-default/./src/images/dontstarve.jpeg","webpack://gatsby-starter-default/./src/images/milfkiara.jpeg","webpack://gatsby-starter-default/./src/images/smolltakamori.jpeg","webpack://gatsby-starter-default/./src/pages/art/artCanvas.js"],"names":["Layout","children","propTypes","PropTypes","Canvas","props","state","canvas","componentDidMount","render","id","style","border","React","TheFandomPage","title","siteTitle"],"mappings":"sKAgBMA,G,QAAS,SAAC,GAAiB,EAAfC,SAChB,OACE,mCAKJD,EAAOE,UAAY,CACjBD,SAAUE,sB,6ICjBSC,G,QCPN,ICAA,ICAA,I,YHQb,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,OAAQ,MAFN,G,uCAKnBC,kBAAA,a,EA2FAC,OAAA,WACE,OACE,gBAAC,WAAD,KACE,uBAAKC,GAAG,oBACN,0BAAQC,MAAO,CAAEC,OAAQ,kBAAoBF,GAAG,kB,GArGtBG,cIKfC,E,oJACjBR,MAAQ,G,iCAGRG,OAAA,WACI,OACI,2BACI,gBAAC,IAAD,CAAKM,MAAM,SACX,gBAAC,IAAD,CAAQC,UAAU,kBAClB,2BACI,wCACA,gBAACZ,EAAD,S,GAXuBS,c","file":"component---src-pages-art-art-canvas-js-e8c03a8b0edb56e49507.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport \"./layout.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"../scss/custom.scss\"\nimport \"../styles/common.css\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React, { useState, useEffect } from \"react\"\r\nimport { fabric } from \"fabric\"\r\n\r\nimport image1src from \"../../images/dontstarve.jpeg\"\r\nimport image2src from \"../../images/milfkiara.jpeg\"\r\nimport image3src from \"../../images/smolltakamori.jpeg\"\r\n\r\nexport default class Canvas extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { canvas: null }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (typeof window !== `undefined`) {\r\n      /*\r\n      this.state.canvas = new fabric.Canvas(\"imageboard\")\r\n      \r\n      this.state.canvas.selection = false\r\n\r\n      this.state.canvas.setDimensions({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      })\r\n\r\n      //zoom function\r\n      this.state.canvas.on(\"mouse:wheel\", function (opt) {\r\n        var delta = opt.e.deltaY\r\n        var zoom = this.state.canvas.getZoom()\r\n        zoom *= 0.999 ** delta\r\n        if (zoom > 10) zoom = 10\r\n        if (zoom < 0.5) zoom = 0.5\r\n        this.state.canvas.zoomToPoint(\r\n          { x: opt.e.offsetX, y: opt.e.offsetY },\r\n          zoom\r\n        )\r\n        opt.e.preventDefault()\r\n        opt.e.stopPropagation()\r\n      })\r\n\r\n      // drag function\r\n      this.state.canvas.on(\"mouse:down\", function (opt) {\r\n        console.log(this.viewportTransform)\r\n        var evt = opt.e\r\n        this.isDragging = true\r\n        this.lastPosX = evt.clientX\r\n        this.lastPosY = evt.clientY\r\n      })\r\n      this.state.canvas.on(\"mouse:move\", function (opt) {\r\n        if (this.isDragging) {\r\n          var e = opt.e\r\n          var vpt = this.viewportTransform\r\n          vpt[4] += e.clientX - this.lastPosX\r\n          vpt[5] += e.clientY - this.lastPosY\r\n          this.requestRenderAll()\r\n          this.lastPosX = e.clientX\r\n          this.lastPosY = e.clientY\r\n        }\r\n      })\r\n      this.state.canvas.on(\"mouse:up\", function (opt) {\r\n        this.setViewportTransform(this.viewportTransform)\r\n        this.isDragging = false\r\n      })\r\n\r\n      this.state.canvas.on(\"mouse:over\", function (e) {\r\n        // let tooltip = e.target?.tooltipRef\r\n        // if (tooltip) {\r\n        //   let span = document.querySelector('span[ref=\"' + tooltip + '\"]')\r\n        //   span.style.visibility = 'visible'\r\n        //   span.style.top = e.e.offsetY + 'px'\r\n        //   span.style.left = e.e.offsetX + 'px'\r\n        // }\r\n      })\r\n\r\n      this.state.canvas.on(\"mouse:out\", function (e) {\r\n        // let tooltip = e.target?.tooltipRef\r\n        // if (tooltip) {\r\n        //   let span = document.querySelector('span[ref=\"' + tooltip + '\"]')\r\n        //   span.style.visibility = 'hidden'\r\n        // }\r\n      })\r\n\r\n      images.forEach(imageItem => {\r\n        let image = new Image()\r\n        image.src = imageItem.src\r\n        image.onload = () => {\r\n          let imgInstance = new fabric.Image(image, {\r\n            left: imageItem.left,\r\n            top: imageItem.top,\r\n            angle: imageItem.angle,\r\n            opacity: imageItem.opacity,\r\n            scaleX: imageItem.scaleX,\r\n            scaleY: imageItem.scaleY,\r\n          })\r\n          //dissables to select this image\r\n          imgInstance.set(\"selectable\", false)\r\n          imgInstance.set(\"tooltipRef\", imageItem.tooltipRef)\r\n          this.state.canvas.add(imgInstance)\r\n        }\r\n      }) */\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"canvas-container\">\r\n          <canvas style={{ border: \"solid 1px #555\" }} id=\"imageboard\" />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst images = [\r\n  {\r\n    src: image1src,\r\n    left: 0,\r\n    top: 0,\r\n    angle: 0,\r\n    opacity: 1,\r\n    scaleX: 0.3,\r\n    scaleY: 0.3,\r\n    tooltipRef: \"ref1\",\r\n  },\r\n  {\r\n    src: image2src,\r\n    left: 1000,\r\n    top: 0,\r\n    angle: 0,\r\n    opacity: 1,\r\n    scaleX: 0.3,\r\n    scaleY: 0.3,\r\n    tooltipRef: \"ref2\",\r\n  },\r\n  {\r\n    src: image3src,\r\n    left: 500,\r\n    top: 600,\r\n    angle: 0,\r\n    opacity: 1,\r\n    scaleX: 0.2,\r\n    scaleY: 0.2,\r\n    tooltipRef: \"ref3\",\r\n  },\r\n]\r\n","export default __webpack_public_path__ + \"static/dontstarve-7bfa6be12ab73c2f10d5b7f4d2cf7b90.jpeg\";","export default __webpack_public_path__ + \"static/milfkiara-02af8ad9df7e9047e71fa8b289a709ef.jpeg\";","export default __webpack_public_path__ + \"static/smolltakamori-a45ec3f5cd9a7bdabdeadf87792637da.jpeg\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport Header from \"../../components/header2\"\n\n// import \"../../components/canvas/vendor/modernizr-3.11.2.min\"\n// import \"../../components/canvas/plugins\"\nimport Canvas from \"../../components/canvas/main\"\n\n\nexport default class TheFandomPage extends React.Component {\n    state = {\n    };\n\n    render() {\n        return (\n            <div>\n                <SEO title=\"Home\" />\n                <Header siteTitle=\"Kiara Million\" />\n                <div>\n                    <h1>Art Canvas</h1>\n                    <Canvas/>\n                </div>\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}